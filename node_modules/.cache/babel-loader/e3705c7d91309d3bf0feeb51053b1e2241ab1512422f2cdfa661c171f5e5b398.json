{"ast":null,"code":"var _jsxFileName = \"/Users/vipinjoshi/Desktop/React/first-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './styles.scss';\nimport Header from './components/Header';\nimport Banner from './components/Banner';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode == 'dark') {\n      setMode('light');\n      document.body.classList.remove('dark-mode');\n    } else {\n      setMode('dark');\n      document.body.classList.add('dark-mode');\n    }\n  };\n  const user = {\n    name: \"Test\",\n    lastName: \"Verma\"\n  };\n  // how to use createElement \n  // const ele = React.createElement(element.type, element.props, onclick: function() {})\n  // return ele;\n\n  // JSX code\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      uData: user,\n      person: {\n        name: 'Lin Lanying',\n        imageId: '1bX5QH6'\n      },\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      heading: 'Test'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      heading: 'Test'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Vs8mkvwR7CZ7J6LLj80enWdttac=\");\n_c = App;\nexport default App;\n\n// class example extends React Component {\n//   render() {\n//     return html;\n//   }\n// }\n\n// ReactDOM.render(<example />, document.getElementById('root'));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Banner","About","TextForm","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","toggleMode","document","body","classList","remove","add","user","name","lastName","children","uData","person","imageId","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["/Users/vipinjoshi/Desktop/React/first-app/src/App.js"],"sourcesContent":["import './styles.scss';\nimport Header from './components/Header';\nimport Banner from './components/Banner';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './App.css';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode = () => {\n    if (mode == 'dark') {\n      setMode('light');\n      document.body.classList.remove('dark-mode');\n    } else {\n      setMode('dark');\n      document.body.classList.add('dark-mode');\n    }\n  }\n\n  const user = {\n    name: \"Test\",\n    lastName: \"Verma\"\n  }\n  // how to use createElement \n  // const ele = React.createElement(element.type, element.props, onclick: function() {})\n  // return ele;\n\n  // JSX code\n  return (\n    <>\n      {/* passing data to child component and toggleMode is a eventlistener function here */}\n      <Header uData={user} person={{ name: 'Lin Lanying', imageId: '1bX5QH6' }} mode={mode} toggleMode={toggleMode} />\n      <TextForm heading={'Test'}/>\n      <TextForm heading={'Test'}/>\n      <About/>\n    </>\n  );\n}\n\nexport default App;\n\n// class example extends React Component {\n//   render() {\n//     return html;\n//   }\n// }\n\n// ReactDOM.render(<example />, document.getElementById('root'));\n"],"mappings":";;AAAA,OAAO,eAAe;AACtB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,+CAA+C;AACtD,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMU,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,IAAI,IAAI,MAAM,EAAE;MAClBC,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,CAAC;IAC7C,CAAC,MAAM;MACLL,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAAC,WAAW,CAAC;IAC1C;EACF,CAAC;EAED,MAAMC,IAAI,GAAG;IACXC,IAAI,EAAE,MAAM;IACZC,QAAQ,EAAE;EACZ,CAAC;EACD;EACA;EACA;;EAEA;EACA,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBAEEhB,OAAA,CAACP,MAAM;MAACwB,KAAK,EAAEJ,IAAK;MAACK,MAAM,EAAE;QAAEJ,IAAI,EAAE,aAAa;QAAEK,OAAO,EAAE;MAAU,CAAE;MAACd,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAEA;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChHvB,OAAA,CAACJ,QAAQ;MAAC4B,OAAO,EAAE;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5BvB,OAAA,CAACJ,QAAQ;MAAC4B,OAAO,EAAE;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5BvB,OAAA,CAACL,KAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBACP;AAEP;AAACnB,EAAA,CA/BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAiCZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}